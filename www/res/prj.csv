# ID;Title;Years;Partner;Link;Link-title;Description
4;<b>florianhofer.it</b> <small>This website</small>;2018-*;-;https://github.com/flhofer/florianhofer.it;GitHub Project repository;In this website implementation I create html output using C coded CGI scripts for apache compatible servers. So far there is no other techique in use than standard C, client-side pure JS and CSS. <b>No</b> external libraries, no cheats. Why do it the easy way if you can have it the hard? For sure, if you can manage this, dig deep into how web servers work, you can also do it the modern - reuse oriented - way.
3;<b>Legacy Control Testing</b>;2016-2018,2021-*;TTControl (until 2017), [open];https://github.com/flhofer/IEC_61131-3_TestLib;GitHub Project page;Programmable Logic Controllers are the most used digital systems in the manufacturing industry. Still, there is little support for the test automation of such systems. As a net result, testing is mainly done manually or not at all, despite the recommendations of the IEC 61131-3 standard. Attempts to provide an automated testing framework for Programmable Logic Controllers have been recently performed with first successful results. The most advanced, promising framework proposes an approach close to object-orientation that relies on non-native language and platform. In this work, we offer a testing library called Advanced POU Testing Framework written in the native language, built according to the unit testing paradigm, and supporting automated testing for simple and complex scenarios of IEC 61131-3 - compliant Programmable Logic Controllers. 
2;<b>RTVM-C</b>;2018-*;iCyPhy (UC Berkeley);icyphy.org;iCyPhy website;Industry 4.0 is changing fundamentally data collection, storage, and analysis in industrial processes, enabling novel application such as flexible manufacturing of highly customized products. However, industrial control systems are typically tailored to the plant they control, making reuse and adaptation a challenge. We believe that modern virtualization techniques, specifically application containers, present a unique opportunity to decouple control from plants. This separation permits us to fully realize the potential for highly distributed, and transferable industrial processes even with real-time constraints arising from time-critical sub-processes. In this project, we explore the challenges and opportunities of shifting industrial control software from dedicated hardware to bare-metal servers or (edge) cloud computing platforms using off-the-shelf technology. We are developing an orchestration tool that containerized applications can run on without compromising scheduled execution.
1;<b>I4S</b>;2018-2022;Systems s.r.l;flhofer.github.io/I4S;Project website and repositories;The vision of a fourth industrial revolution lately powerfully captured the attention of researchers. A Cyber-physical system (CPS) is one of the main drivers of this vision, which controls an underlying factory interacting with sensors, actuators, and other systems, creating systems-of-systems. A central point of interest is how these components are built and interconnected, i.e., the system's architecture, and how it might be improved to increase reliability and security. Unfortunately, a recently conducted systematic mapping study has shown that security-based research for CPS architectures is only weakly present. Therefore, this research aims to find generalized architectural models and patterns that improve reliability and security. The results will enable their improvement for cyber-physical systems in general, leading to various application scenarios and possible use cases. 